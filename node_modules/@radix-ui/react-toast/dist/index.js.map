{"mappings":"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","sources":["packages/react/toast/src/index.ts","packages/react/toast/src/Toast.tsx"],"sourcesContent":["export {\n  createToastScope,\n  //\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastAction,\n  ToastClose,\n  //\n  Provider,\n  Viewport,\n  Root,\n  Title,\n  Description,\n  Action,\n  Close,\n} from './Toast';\nexport type {\n  ToastProviderProps,\n  ToastViewportProps,\n  ToastProps,\n  ToastTitleProps,\n  ToastDescriptionProps,\n  ToastActionProps,\n  ToastCloseProps,\n} from './Toast';\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { createContextScope } from '@radix-ui/react-context';\nimport * as DismissableLayer from '@radix-ui/react-dismissable-layer';\nimport { Portal } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive, dispatchDiscreteCustomEvent } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { VisuallyHidden } from '@radix-ui/react-visually-hidden';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * ToastProvider\n * -----------------------------------------------------------------------------------------------*/\n\nconst PROVIDER_NAME = 'ToastProvider';\n\nconst [Collection, useCollection, createCollectionScope] = createCollection<ToastElement>('Toast');\n\ntype SwipeDirection = 'up' | 'down' | 'left' | 'right';\ntype ToastProviderContextValue = {\n  label: string;\n  duration: number;\n  swipeDirection: SwipeDirection;\n  swipeThreshold: number;\n  toastCount: number;\n  viewport: ToastViewportElement | null;\n  onViewportChange(viewport: ToastViewportElement): void;\n  onToastAdd(): void;\n  onToastRemove(): void;\n  isFocusedToastEscapeKeyDownRef: React.MutableRefObject<boolean>;\n  isClosePausedRef: React.MutableRefObject<boolean>;\n};\n\ntype ScopedProps<P> = P & { __scopeToast?: Scope };\nconst [createToastContext, createToastScope] = createContextScope('Toast', [createCollectionScope]);\nconst [ToastProviderProvider, useToastProviderContext] =\n  createToastContext<ToastProviderContextValue>(PROVIDER_NAME);\n\ninterface ToastProviderProps {\n  children?: React.ReactNode;\n  /**\n   * An author-localized label for each toast. Used to help screen reader users\n   * associate the interruption with a toast.\n   * @defaultValue 'Notification'\n   */\n  label?: string;\n  /**\n   * Time in milliseconds that each toast should remain visible for.\n   * @defaultValue 5000\n   */\n  duration?: number;\n  /**\n   * Direction of pointer swipe that should close the toast.\n   * @defaultValue 'right'\n   */\n  swipeDirection?: SwipeDirection;\n  /**\n   * Distance in pixels that the swipe must pass before a close is triggered.\n   * @defaultValue 50\n   */\n  swipeThreshold?: number;\n}\n\nconst ToastProvider: React.FC<ToastProviderProps> = (props: ScopedProps<ToastProviderProps>) => {\n  const {\n    __scopeToast,\n    label = 'Notification',\n    duration = 5000,\n    swipeDirection = 'right',\n    swipeThreshold = 50,\n    children,\n  } = props;\n  const [viewport, setViewport] = React.useState<ToastViewportElement | null>(null);\n  const [toastCount, setToastCount] = React.useState(0);\n  const isFocusedToastEscapeKeyDownRef = React.useRef(false);\n  const isClosePausedRef = React.useRef(false);\n  return (\n    <Collection.Provider scope={__scopeToast}>\n      <ToastProviderProvider\n        scope={__scopeToast}\n        label={label}\n        duration={duration}\n        swipeDirection={swipeDirection}\n        swipeThreshold={swipeThreshold}\n        toastCount={toastCount}\n        viewport={viewport}\n        onViewportChange={setViewport}\n        onToastAdd={React.useCallback(() => setToastCount((prevCount) => prevCount + 1), [])}\n        onToastRemove={React.useCallback(() => setToastCount((prevCount) => prevCount - 1), [])}\n        isFocusedToastEscapeKeyDownRef={isFocusedToastEscapeKeyDownRef}\n        isClosePausedRef={isClosePausedRef}\n      >\n        {children}\n      </ToastProviderProvider>\n    </Collection.Provider>\n  );\n};\n\nToastProvider.propTypes = {\n  label(props) {\n    if (props.label && typeof props.label === 'string' && !props.label.trim()) {\n      const error = `Invalid prop \\`label\\` supplied to \\`${PROVIDER_NAME}\\`. Expected non-empty \\`string\\`.`;\n      return new Error(error);\n    }\n    return null;\n  },\n};\n\nToastProvider.displayName = PROVIDER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ToastViewport\n * -----------------------------------------------------------------------------------------------*/\n\nconst VIEWPORT_NAME = 'ToastViewport';\nconst VIEWPORT_DEFAULT_HOTKEY = ['F8'];\nconst VIEWPORT_PAUSE = 'toast.viewportPause';\nconst VIEWPORT_RESUME = 'toast.viewportResume';\n\ntype ToastViewportElement = React.ElementRef<typeof Primitive.ol>;\ntype PrimitiveOrderedListProps = Radix.ComponentPropsWithoutRef<typeof Primitive.ol>;\ninterface ToastViewportProps extends PrimitiveOrderedListProps {\n  /**\n   * The keys to use as the keyboard shortcut that will move focus to the toast viewport.\n   * @defaultValue ['F8']\n   */\n  hotkey?: string[];\n  /**\n   * An author-localized label for the toast viewport to provide context for screen reader users\n   * when navigating page landmarks. The available `{hotkey}` placeholder will be replaced for you.\n   * @defaultValue 'Notifications ({hotkey})'\n   */\n  label?: string;\n}\n\nconst ToastViewport = React.forwardRef<ToastViewportElement, ToastViewportProps>(\n  (props: ScopedProps<ToastViewportProps>, forwardedRef) => {\n    const {\n      __scopeToast,\n      hotkey = VIEWPORT_DEFAULT_HOTKEY,\n      label = 'Notifications ({hotkey})',\n      ...viewportProps\n    } = props;\n    const context = useToastProviderContext(VIEWPORT_NAME, __scopeToast);\n    const getItems = useCollection(__scopeToast);\n    const wrapperRef = React.useRef<HTMLDivElement>(null);\n    const headFocusProxyRef = React.useRef<FocusProxyElement>(null);\n    const tailFocusProxyRef = React.useRef<FocusProxyElement>(null);\n    const ref = React.useRef<ToastViewportElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref, context.onViewportChange);\n    const hotkeyLabel = hotkey.join('+').replace(/Key/g, '').replace(/Digit/g, '');\n    const hasToasts = context.toastCount > 0;\n\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        // we use `event.code` as it is consistent regardless of meta keys that were pressed.\n        // for example, `event.key` for `Control+Alt+t` is `†` and `t !== †`\n        const isHotkeyPressed = hotkey.every((key) => (event as any)[key] || event.code === key);\n        if (isHotkeyPressed) ref.current?.focus();\n      };\n      document.addEventListener('keydown', handleKeyDown);\n      return () => document.removeEventListener('keydown', handleKeyDown);\n    }, [hotkey]);\n\n    React.useEffect(() => {\n      const wrapper = wrapperRef.current;\n      const viewport = ref.current;\n      if (wrapper && viewport) {\n        const handlePause = () => {\n          const pauseEvent = new CustomEvent(VIEWPORT_PAUSE);\n          viewport.dispatchEvent(pauseEvent);\n          context.isClosePausedRef.current = true;\n        };\n\n        const handleResume = () => {\n          const resumeEvent = new CustomEvent(VIEWPORT_RESUME);\n          viewport.dispatchEvent(resumeEvent);\n          context.isClosePausedRef.current = false;\n        };\n\n        // Toasts are not in the viewport React tree so we need to bind DOM events\n        wrapper.addEventListener('focusin', handlePause);\n        wrapper.addEventListener('focusout', handleResume);\n        wrapper.addEventListener('pointerenter', handlePause);\n        wrapper.addEventListener('pointerleave', handleResume);\n        window.addEventListener('blur', handlePause);\n        window.addEventListener('focus', handleResume);\n        return () => {\n          wrapper.removeEventListener('focusin', handlePause);\n          wrapper.removeEventListener('focusout', handleResume);\n          wrapper.removeEventListener('pointerenter', handlePause);\n          wrapper.removeEventListener('pointerleave', handleResume);\n          window.removeEventListener('blur', handlePause);\n          window.removeEventListener('focus', handleResume);\n        };\n      }\n    }, [context.isClosePausedRef]);\n\n    const getSortedTabbableCandidates = React.useCallback(\n      ({ tabbingDirection }: { tabbingDirection: 'forwards' | 'backwards' }) => {\n        const toastItems = getItems();\n        const tabbableCandidates = toastItems.map((toastItem) => {\n          const toastNode = toastItem.ref.current!;\n          const toastTabbableCandidates = [toastNode, ...getTabbableCandidates(toastNode)];\n          return tabbingDirection === 'forwards'\n            ? toastTabbableCandidates\n            : toastTabbableCandidates.reverse();\n        });\n        return (\n          tabbingDirection === 'forwards' ? tabbableCandidates.reverse() : tabbableCandidates\n        ).flat();\n      },\n      [getItems]\n    );\n\n    React.useEffect(() => {\n      const viewport = ref.current;\n      // We programmatically manage tabbing as we are unable to influence\n      // the source order with portals, this allows us to reverse the\n      // tab order so that it runs from most recent toast to least\n      if (viewport) {\n        const handleKeyDown = (event: KeyboardEvent) => {\n          const isMetaKey = event.altKey || event.ctrlKey || event.metaKey;\n          const isTabKey = event.key === 'Tab' && !isMetaKey;\n\n          if (isTabKey) {\n            const focusedElement = document.activeElement;\n            const isTabbingBackwards = event.shiftKey;\n            const targetIsViewport = event.target === viewport;\n\n            // If we're back tabbing after jumping to the viewport then we simply\n            // proxy focus out to the preceding document\n            if (targetIsViewport && isTabbingBackwards) {\n              headFocusProxyRef.current?.focus();\n              return;\n            }\n\n            const tabbingDirection = isTabbingBackwards ? 'backwards' : 'forwards';\n            const sortedCandidates = getSortedTabbableCandidates({ tabbingDirection });\n            const index = sortedCandidates.findIndex((candidate) => candidate === focusedElement);\n            if (focusFirst(sortedCandidates.slice(index + 1))) {\n              event.preventDefault();\n            } else {\n              // If we can't focus that means we're at the edges so we\n              // proxy to the corresponding exit point and let the browser handle\n              // tab/shift+tab keypress and implicitly pass focus to the next valid element in the document\n              isTabbingBackwards\n                ? headFocusProxyRef.current?.focus()\n                : tailFocusProxyRef.current?.focus();\n            }\n          }\n        };\n\n        // Toasts are not in the viewport React tree so we need to bind DOM events\n        viewport.addEventListener('keydown', handleKeyDown);\n        return () => viewport.removeEventListener('keydown', handleKeyDown);\n      }\n    }, [getItems, getSortedTabbableCandidates]);\n\n    return (\n      <DismissableLayer.Branch\n        ref={wrapperRef}\n        role=\"region\"\n        aria-label={label.replace('{hotkey}', hotkeyLabel)}\n        // Ensure virtual cursor from landmarks menus triggers focus/blur for pause/resume\n        tabIndex={-1}\n        // incase list has size when empty (e.g. padding), we remove pointer events so\n        // it doesn't prevent interactions with page elements that it overlays\n        style={{ pointerEvents: hasToasts ? undefined : 'none' }}\n      >\n        {hasToasts && (\n          <FocusProxy\n            ref={headFocusProxyRef}\n            onFocusFromOutsideViewport={() => {\n              const tabbableCandidates = getSortedTabbableCandidates({\n                tabbingDirection: 'forwards',\n              });\n              focusFirst(tabbableCandidates);\n            }}\n          />\n        )}\n        {/**\n         * tabindex on the the list so that it can be focused when items are removed. we focus\n         * the list instead of the viewport so it announces number of items remaining.\n         */}\n        <Collection.Slot scope={__scopeToast}>\n          <Primitive.ol tabIndex={-1} {...viewportProps} ref={composedRefs} />\n        </Collection.Slot>\n        {hasToasts && (\n          <FocusProxy\n            ref={tailFocusProxyRef}\n            onFocusFromOutsideViewport={() => {\n              const tabbableCandidates = getSortedTabbableCandidates({\n                tabbingDirection: 'backwards',\n              });\n              focusFirst(tabbableCandidates);\n            }}\n          />\n        )}\n      </DismissableLayer.Branch>\n    );\n  }\n);\n\nToastViewport.displayName = VIEWPORT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst FOCUS_PROXY_NAME = 'ToastFocusProxy';\n\ntype FocusProxyElement = React.ElementRef<typeof VisuallyHidden>;\ntype VisuallyHiddenProps = Radix.ComponentPropsWithoutRef<typeof VisuallyHidden>;\ninterface FocusProxyProps extends VisuallyHiddenProps {\n  onFocusFromOutsideViewport(): void;\n}\n\nconst FocusProxy = React.forwardRef<FocusProxyElement, ScopedProps<FocusProxyProps>>(\n  (props, forwardedRef) => {\n    const { __scopeToast, onFocusFromOutsideViewport, ...proxyProps } = props;\n    const context = useToastProviderContext(FOCUS_PROXY_NAME, __scopeToast);\n\n    return (\n      <VisuallyHidden\n        aria-hidden\n        tabIndex={0}\n        {...proxyProps}\n        ref={forwardedRef}\n        // Avoid page scrolling when focus is on the focus proxy\n        style={{ position: 'fixed' }}\n        onFocus={(event) => {\n          const prevFocusedElement = event.relatedTarget as HTMLElement | null;\n          const isFocusFromOutsideViewport = !context.viewport?.contains(prevFocusedElement);\n          if (isFocusFromOutsideViewport) onFocusFromOutsideViewport();\n        }}\n      />\n    );\n  }\n);\n\nFocusProxy.displayName = FOCUS_PROXY_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * Toast\n * -----------------------------------------------------------------------------------------------*/\n\nconst TOAST_NAME = 'Toast';\nconst TOAST_SWIPE_START = 'toast.swipeStart';\nconst TOAST_SWIPE_MOVE = 'toast.swipeMove';\nconst TOAST_SWIPE_CANCEL = 'toast.swipeCancel';\nconst TOAST_SWIPE_END = 'toast.swipeEnd';\n\ntype ToastElement = ToastImplElement;\ninterface ToastProps extends Omit<ToastImplProps, keyof ToastImplPrivateProps> {\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst Toast = React.forwardRef<ToastElement, ToastProps>(\n  (props: ScopedProps<ToastProps>, forwardedRef) => {\n    const { forceMount, open: openProp, defaultOpen, onOpenChange, ...toastProps } = props;\n    const [open = true, setOpen] = useControllableState({\n      prop: openProp,\n      defaultProp: defaultOpen,\n      onChange: onOpenChange,\n    });\n    return (\n      <Presence present={forceMount || open}>\n        <ToastImpl\n          open={open}\n          {...toastProps}\n          ref={forwardedRef}\n          onClose={() => setOpen(false)}\n          onSwipeStart={composeEventHandlers(props.onSwipeStart, (event) => {\n            event.currentTarget.setAttribute('data-swipe', 'start');\n          })}\n          onSwipeMove={composeEventHandlers(props.onSwipeMove, (event) => {\n            const { x, y } = event.detail.delta;\n            event.currentTarget.setAttribute('data-swipe', 'move');\n            event.currentTarget.style.setProperty('--radix-toast-swipe-move-x', `${x}px`);\n            event.currentTarget.style.setProperty('--radix-toast-swipe-move-y', `${y}px`);\n          })}\n          onSwipeCancel={composeEventHandlers(props.onSwipeCancel, (event) => {\n            event.currentTarget.setAttribute('data-swipe', 'cancel');\n            event.currentTarget.style.removeProperty('--radix-toast-swipe-move-x');\n            event.currentTarget.style.removeProperty('--radix-toast-swipe-move-y');\n            event.currentTarget.style.removeProperty('--radix-toast-swipe-end-x');\n            event.currentTarget.style.removeProperty('--radix-toast-swipe-end-y');\n          })}\n          onSwipeEnd={composeEventHandlers(props.onSwipeEnd, (event) => {\n            const { x, y } = event.detail.delta;\n            event.currentTarget.setAttribute('data-swipe', 'end');\n            event.currentTarget.style.removeProperty('--radix-toast-swipe-move-x');\n            event.currentTarget.style.removeProperty('--radix-toast-swipe-move-y');\n            event.currentTarget.style.setProperty('--radix-toast-swipe-end-x', `${x}px`);\n            event.currentTarget.style.setProperty('--radix-toast-swipe-end-y', `${y}px`);\n            setOpen(false);\n          })}\n        />\n      </Presence>\n    );\n  }\n);\n\nToast.displayName = TOAST_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype SwipeEvent = { currentTarget: EventTarget & ToastElement } & Omit<\n  CustomEvent<{ originalEvent: React.PointerEvent; delta: { x: number; y: number } }>,\n  'currentTarget'\n>;\n\nconst [ToastInteractiveProvider, useToastInteractiveContext] = createToastContext(TOAST_NAME, {\n  isInteractive: false,\n  onClose() {},\n});\n\ntype ToastImplElement = React.ElementRef<typeof Primitive.li>;\ntype DismissableLayerProps = Radix.ComponentPropsWithoutRef<typeof DismissableLayer.Root>;\ntype ToastImplPrivateProps = { open: boolean; onClose(): void };\ntype PrimitiveListItemProps = Radix.ComponentPropsWithoutRef<typeof Primitive.li>;\ninterface ToastImplProps extends ToastImplPrivateProps, PrimitiveListItemProps {\n  type?: 'foreground' | 'background';\n  /**\n   * Time in milliseconds that toast should remain visible for. Overrides value\n   * given to `ToastProvider`.\n   */\n  duration?: number;\n  onEscapeKeyDown?: DismissableLayerProps['onEscapeKeyDown'];\n  onSwipeStart?(event: SwipeEvent): void;\n  onSwipeMove?(event: SwipeEvent): void;\n  onSwipeCancel?(event: SwipeEvent): void;\n  onSwipeEnd?(event: SwipeEvent): void;\n}\n\nconst ToastImpl = React.forwardRef<ToastImplElement, ToastImplProps>(\n  (props: ScopedProps<ToastImplProps>, forwardedRef) => {\n    const {\n      __scopeToast,\n      type = 'foreground',\n      duration: durationProp,\n      open,\n      onClose,\n      onEscapeKeyDown,\n      onSwipeStart,\n      onSwipeMove,\n      onSwipeCancel,\n      onSwipeEnd,\n      ...toastProps\n    } = props;\n    const context = useToastProviderContext(TOAST_NAME, __scopeToast);\n    const ref = React.useRef<ToastImplElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const pointerStartRef = React.useRef<{ x: number; y: number } | null>(null);\n    const swipeDeltaRef = React.useRef<{ x: number; y: number } | null>(null);\n    const duration = durationProp || context.duration;\n    const closeTimerStartTimeRef = React.useRef(0);\n    const closeTimerRemainingTimeRef = React.useRef(duration);\n    const closeTimerRef = React.useRef(0);\n    const { onToastAdd, onToastRemove } = context;\n    const handleClose = useCallbackRef(() => {\n      // focus viewport if focus is within toast to read the remaining toast\n      // count to SR users and ensure focus isn't lost\n      const isFocusInToast = ref.current?.contains(document.activeElement);\n      if (isFocusInToast) context.viewport?.focus();\n      onClose();\n    });\n\n    const startTimer = React.useCallback(\n      (duration: number) => {\n        if (!duration || duration === Infinity) return;\n        window.clearTimeout(closeTimerRef.current);\n        closeTimerStartTimeRef.current = new Date().getTime();\n        closeTimerRef.current = window.setTimeout(handleClose, duration);\n      },\n      [handleClose]\n    );\n\n    React.useEffect(() => {\n      const viewport = context.viewport;\n      if (viewport) {\n        const handleResume = () => {\n          startTimer(closeTimerRemainingTimeRef.current);\n        };\n        const handlePause = () => {\n          const elapsedTime = new Date().getTime() - closeTimerStartTimeRef.current;\n          closeTimerRemainingTimeRef.current = closeTimerRemainingTimeRef.current - elapsedTime;\n          window.clearTimeout(closeTimerRef.current);\n        };\n        viewport.addEventListener(VIEWPORT_PAUSE, handlePause);\n        viewport.addEventListener(VIEWPORT_RESUME, handleResume);\n        return () => {\n          viewport.removeEventListener(VIEWPORT_PAUSE, handlePause);\n          viewport.removeEventListener(VIEWPORT_RESUME, handleResume);\n        };\n      }\n    }, [context.viewport, duration, startTimer]);\n\n    // start timer when toast opens or duration changes.\n    // we include `open` in deps because closed !== unmounted when animating\n    // so it could reopen before being completely unmounted\n    React.useEffect(() => {\n      if (open && !context.isClosePausedRef.current) startTimer(duration);\n    }, [open, duration, context.isClosePausedRef, startTimer]);\n\n    React.useEffect(() => {\n      onToastAdd();\n      return () => onToastRemove();\n    }, [onToastAdd, onToastRemove]);\n\n    if (!context.viewport) return null;\n\n    return (\n      <>\n        <ToastAnnounce\n          __scopeToast={__scopeToast}\n          // Toasts are always role=status to avoid stuttering issues with role=alert in SRs.\n          role=\"status\"\n          aria-live={type === 'foreground' ? 'assertive' : 'polite'}\n          aria-atomic\n        >\n          {props.children}\n        </ToastAnnounce>\n\n        <ToastInteractiveProvider scope={__scopeToast} isInteractive onClose={handleClose}>\n          {ReactDOM.createPortal(\n            <Collection.ItemSlot scope={__scopeToast}>\n              <DismissableLayer.Root\n                asChild\n                onEscapeKeyDown={composeEventHandlers(onEscapeKeyDown, () => {\n                  if (!context.isFocusedToastEscapeKeyDownRef.current) handleClose();\n                  context.isFocusedToastEscapeKeyDownRef.current = false;\n                })}\n              >\n                <Primitive.li\n                  tabIndex={0}\n                  data-state={open ? 'open' : 'closed'}\n                  data-swipe-direction={context.swipeDirection}\n                  {...toastProps}\n                  ref={composedRefs}\n                  style={{ userSelect: 'none', touchAction: 'none', ...props.style }}\n                  onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n                    if (event.key !== 'Escape') return;\n                    onEscapeKeyDown?.(event.nativeEvent);\n                    if (!event.nativeEvent.defaultPrevented) {\n                      context.isFocusedToastEscapeKeyDownRef.current = true;\n                      handleClose();\n                    }\n                  })}\n                  onPointerDown={composeEventHandlers(props.onPointerDown, (event) => {\n                    if (event.button !== 0) return;\n                    pointerStartRef.current = { x: event.clientX, y: event.clientY };\n                  })}\n                  onPointerMove={composeEventHandlers(props.onPointerMove, (event) => {\n                    if (!pointerStartRef.current) return;\n                    const x = event.clientX - pointerStartRef.current.x;\n                    const y = event.clientY - pointerStartRef.current.y;\n                    const hasSwipeMoveStarted = Boolean(swipeDeltaRef.current);\n                    const isHorizontalSwipe = ['left', 'right'].includes(context.swipeDirection);\n                    const clamp = ['left', 'up'].includes(context.swipeDirection)\n                      ? Math.min\n                      : Math.max;\n                    const clampedX = isHorizontalSwipe ? clamp(0, x) : 0;\n                    const clampedY = !isHorizontalSwipe ? clamp(0, y) : 0;\n                    const moveStartBuffer = event.pointerType === 'touch' ? 10 : 2;\n                    const delta = { x: clampedX, y: clampedY };\n                    const eventDetail = { originalEvent: event, delta };\n                    if (hasSwipeMoveStarted) {\n                      swipeDeltaRef.current = delta;\n                      handleAndDispatchCustomEvent(TOAST_SWIPE_MOVE, onSwipeMove, eventDetail, {\n                        discrete: false,\n                      });\n                    } else if (isDeltaInDirection(delta, context.swipeDirection, moveStartBuffer)) {\n                      swipeDeltaRef.current = delta;\n                      handleAndDispatchCustomEvent(TOAST_SWIPE_START, onSwipeStart, eventDetail, {\n                        discrete: false,\n                      });\n                      (event.target as HTMLElement).setPointerCapture(event.pointerId);\n                    } else if (Math.abs(x) > moveStartBuffer || Math.abs(y) > moveStartBuffer) {\n                      // User is swiping in wrong direction so we disable swipe gesture\n                      // for the current pointer down interaction\n                      pointerStartRef.current = null;\n                    }\n                  })}\n                  onPointerUp={composeEventHandlers(props.onPointerUp, (event) => {\n                    const delta = swipeDeltaRef.current;\n                    (event.target as HTMLElement).releasePointerCapture(event.pointerId);\n                    swipeDeltaRef.current = null;\n                    pointerStartRef.current = null;\n                    if (delta) {\n                      const toast = event.currentTarget;\n                      const eventDetail = { originalEvent: event, delta };\n                      if (\n                        isDeltaInDirection(delta, context.swipeDirection, context.swipeThreshold)\n                      ) {\n                        handleAndDispatchCustomEvent(TOAST_SWIPE_END, onSwipeEnd, eventDetail, {\n                          discrete: true,\n                        });\n                      } else {\n                        handleAndDispatchCustomEvent(\n                          TOAST_SWIPE_CANCEL,\n                          onSwipeCancel,\n                          eventDetail,\n                          {\n                            discrete: true,\n                          }\n                        );\n                      }\n                      // Prevent click event from triggering on items within the toast when\n                      // pointer up is part of a swipe gesture\n                      toast.addEventListener('click', (event) => event.preventDefault(), {\n                        once: true,\n                      });\n                    }\n                  })}\n                />\n              </DismissableLayer.Root>\n            </Collection.ItemSlot>,\n            context.viewport\n          )}\n        </ToastInteractiveProvider>\n      </>\n    );\n  }\n);\n\nToastImpl.propTypes = {\n  type(props) {\n    if (props.type && !['foreground', 'background'].includes(props.type)) {\n      const error = `Invalid prop \\`type\\` supplied to \\`${TOAST_NAME}\\`. Expected \\`foreground | background\\`.`;\n      return new Error(error);\n    }\n    return null;\n  },\n};\n\n/* -----------------------------------------------------------------------------------------------*/\n\ninterface ToastAnnounceProps\n  extends React.ComponentPropsWithoutRef<'div'>,\n    ScopedProps<{ children?: ToastImplProps['children'] }> {}\n\nconst ToastAnnounce: React.FC<ToastAnnounceProps> = (props: ScopedProps<ToastAnnounceProps>) => {\n  const { __scopeToast, children, ...announceProps } = props;\n  const context = useToastProviderContext(TOAST_NAME, __scopeToast);\n  const [renderAnnounceText, setRenderAnnounceText] = React.useState(false);\n  const [isAnnounced, setIsAnnounced] = React.useState(false);\n  const [fragment, setFragment] = React.useState<DocumentFragment>();\n  const [rootFragmentNode, setRootFragmentNode] = React.useState<HTMLDivElement | null>(null);\n\n  // We portal children into a document fragment so that we can extract the bare text nodes\n  // before rendering to the DOM. This avoids issues with duplicate `children`\n  // and animation libraries when composing via `asChild`.\n  const announceTextContent = React.useMemo(() => {\n    return rootFragmentNode ? getAnnounceTextContent(rootFragmentNode) : null;\n  }, [rootFragmentNode]);\n\n  // setting the fragment in `useLayoutEffect` as `DocumentFragment` doesn't exist on the server\n  useLayoutEffect(() => {\n    setFragment(new DocumentFragment());\n  }, []);\n\n  // render text content in the next frame to ensure toast is announced in NVDA\n  useNextFrame(() => setRenderAnnounceText(true));\n\n  React.useEffect(() => {\n    const timer = window.setTimeout(() => setIsAnnounced(true), 1000);\n    return () => window.clearTimeout(timer);\n  }, []);\n\n  return isAnnounced ? null : (\n    <>\n      {fragment && (\n        <Portal container={fragment as any} ref={setRootFragmentNode}>\n          {context.label} {children}\n        </Portal>\n      )}\n      <Portal asChild>\n        <VisuallyHidden {...announceProps}>\n          {renderAnnounceText && announceTextContent}\n        </VisuallyHidden>\n      </Portal>\n    </>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * ToastTitle\n * -----------------------------------------------------------------------------------------------*/\n\nconst TITLE_NAME = 'ToastTitle';\n\ntype ToastTitleElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface ToastTitleProps extends PrimitiveDivProps {}\n\nconst ToastTitle = React.forwardRef<ToastTitleElement, ToastTitleProps>(\n  (props: ScopedProps<ToastTitleProps>, forwardedRef) => {\n    const { __scopeToast, ...titleProps } = props;\n    return <Primitive.div {...titleProps} ref={forwardedRef} />;\n  }\n);\n\nToastTitle.displayName = TITLE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ToastDescription\n * -----------------------------------------------------------------------------------------------*/\n\nconst DESCRIPTION_NAME = 'ToastDescription';\n\ntype ToastDescriptionElement = React.ElementRef<typeof Primitive.div>;\ninterface ToastDescriptionProps extends PrimitiveDivProps {}\n\nconst ToastDescription = React.forwardRef<ToastDescriptionElement, ToastDescriptionProps>(\n  (props: ScopedProps<ToastDescriptionProps>, forwardedRef) => {\n    const { __scopeToast, ...descriptionProps } = props;\n    return <Primitive.div {...descriptionProps} ref={forwardedRef} />;\n  }\n);\n\nToastDescription.displayName = DESCRIPTION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ToastAction\n * -----------------------------------------------------------------------------------------------*/\n\nconst ACTION_NAME = 'ToastAction';\n\ntype ToastActionElement = ToastCloseElement;\ninterface ToastActionProps extends ToastCloseProps {\n  /**\n   * A short description for an alternate way to carry out the action. For screen reader users\n   * who will not be able to navigate to the button easily/quickly.\n   * @example <ToastAction altText=\"Goto account settings to updgrade\">Upgrade</ToastAction>\n   * @example <ToastAction altText=\"Undo (Alt+U)\">Undo</ToastAction>\n   */\n  altText: string;\n}\n\nconst ToastAction = React.forwardRef<ToastActionElement, ToastActionProps>(\n  (props: ScopedProps<ToastActionProps>, forwardedRef) => {\n    const { altText, ...actionProps } = props;\n    const context = useToastInteractiveContext(ACTION_NAME, props.__scopeToast);\n    if (!altText) return null;\n    return context.isInteractive ? (\n      <ToastClose {...actionProps} ref={forwardedRef} />\n    ) : (\n      <span>{altText}</span>\n    );\n  }\n);\n\nToastAction.propTypes = {\n  altText(props) {\n    if (!props.altText) {\n      return new Error(`Missing prop \\`altText\\` expected on \\`${ACTION_NAME}\\``);\n    }\n    return null;\n  },\n};\n\nToastAction.displayName = ACTION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ToastClose\n * -----------------------------------------------------------------------------------------------*/\n\nconst CLOSE_NAME = 'ToastClose';\n\ntype ToastCloseElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface ToastCloseProps extends PrimitiveButtonProps {}\n\nconst ToastClose = React.forwardRef<ToastCloseElement, ToastCloseProps>(\n  (props: ScopedProps<ToastCloseProps>, forwardedRef) => {\n    const { __scopeToast, ...closeProps } = props;\n    const interactiveContext = useToastInteractiveContext(CLOSE_NAME, __scopeToast);\n    return interactiveContext.isInteractive ? (\n      <Primitive.button\n        type=\"button\"\n        {...closeProps}\n        ref={forwardedRef}\n        onClick={composeEventHandlers(props.onClick, interactiveContext.onClose)}\n      />\n    ) : null;\n  }\n);\n\nToastClose.displayName = CLOSE_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\nfunction handleAndDispatchCustomEvent<\n  E extends CustomEvent,\n  ReactEvent extends React.SyntheticEvent\n>(\n  name: string,\n  handler: ((event: E) => void) | undefined,\n  detail: { originalEvent: ReactEvent } & (E extends CustomEvent<infer D> ? D : never),\n  { discrete }: { discrete: boolean }\n) {\n  const currentTarget = detail.originalEvent.currentTarget as HTMLElement;\n  const event = new CustomEvent(name, { bubbles: true, cancelable: true, detail });\n  if (handler) currentTarget.addEventListener(name, handler as EventListener, { once: true });\n\n  if (discrete) {\n    dispatchDiscreteCustomEvent(currentTarget, event);\n  } else {\n    currentTarget.dispatchEvent(event);\n  }\n}\n\nconst isDeltaInDirection = (\n  delta: { x: number; y: number },\n  direction: SwipeDirection,\n  threshold = 0\n) => {\n  const deltaX = Math.abs(delta.x);\n  const deltaY = Math.abs(delta.y);\n  const isDeltaX = deltaX > deltaY;\n  if (direction === 'left' || direction === 'right') {\n    return isDeltaX && deltaX > threshold;\n  } else {\n    return !isDeltaX && deltaY > threshold;\n  }\n};\n\nfunction useNextFrame(callback = () => {}) {\n  const fn = useCallbackRef(callback);\n  useLayoutEffect(() => {\n    let raf1 = 0;\n    let raf2 = 0;\n    raf1 = window.requestAnimationFrame(() => (raf2 = window.requestAnimationFrame(fn)));\n    return () => {\n      window.cancelAnimationFrame(raf1);\n      window.cancelAnimationFrame(raf2);\n    };\n  }, [fn]);\n}\n\nfunction getAnnounceTextContent(container: HTMLElement) {\n  const textContent: string[] = [];\n  const childNodes = Array.from(container.childNodes);\n\n  childNodes.forEach((node) => {\n    if (node.nodeType === node.TEXT_NODE && node.textContent) textContent.push(node.textContent);\n    if (isHTMLElement(node)) {\n      const isHidden = node.ariaHidden || node.hidden || node.style.display === 'none';\n      if (!isHidden) textContent.push(...getAnnounceTextContent(node));\n    }\n  });\n\n  // We return a collection of text rather than a single concatenated string.\n  // This allows SR VO to naturally pause break between nodes while announcing.\n  return textContent;\n}\n\nfunction isHTMLElement(node: any): node is HTMLElement {\n  return node.nodeType === node.ELEMENT_NODE;\n}\n\n/**\n * Returns a list of potential tabbable candidates.\n *\n * NOTE: This is only a close approximation. For example it doesn't take into account cases like when\n * elements are not visible. This cannot be worked out easily by just reading a property, but rather\n * necessitate runtime knowledge (computed styles, etc). We deal with these cases separately.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker\n * Credit: https://github.com/discord/focus-layers/blob/master/src/util/wrapFocus.tsx#L1\n */\nfunction getTabbableCandidates(container: HTMLElement) {\n  const nodes: HTMLElement[] = [];\n  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: (node: any) => {\n      const isHiddenInput = node.tagName === 'INPUT' && node.type === 'hidden';\n      if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;\n      // `.tabIndex` is not the same as the `tabindex` attribute. It works on the\n      // runtime's understanding of tabbability, so this automatically accounts\n      // for any kind of element that could be tabbed to.\n      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n    },\n  });\n  while (walker.nextNode()) nodes.push(walker.currentNode as HTMLElement);\n  // we do not take into account the order of nodes with positive `tabIndex` as it\n  // hinders accessibility to have tab order different from visual order.\n  return nodes;\n}\n\nfunction focusFirst(candidates: HTMLElement[]) {\n  const previouslyFocusedElement = document.activeElement;\n  return candidates.some((candidate) => {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === previouslyFocusedElement) return true;\n    candidate.focus();\n    return document.activeElement !== previouslyFocusedElement;\n  });\n}\n\nconst Provider = ToastProvider;\nconst Viewport = ToastViewport;\nconst Root = Toast;\nconst Title = ToastTitle;\nconst Description = ToastDescription;\nconst Action = ToastAction;\nconst Close = ToastClose;\n\nexport {\n  createToastScope,\n  //\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastAction,\n  ToastClose,\n  //\n  Provider,\n  Viewport,\n  Root,\n  Title,\n  Description,\n  Action,\n  Close,\n};\nexport type {\n  ToastProviderProps,\n  ToastViewportProps,\n  ToastProps,\n  ToastTitleProps,\n  ToastDescriptionProps,\n  ToastActionProps,\n  ToastCloseProps,\n};\n"],"names":["createToastScope","ToastProvider","ToastViewport","Toast","ToastTitle","ToastDescription","ToastAction","ToastClose","Provider","Viewport","Root","Title","Description","Action","Close","React","ReactDOM","composeEventHandlers","useComposedRefs","createCollection","createContextScope","DismissableLayer","Portal","Presence","Primitive","dispatchDiscreteCustomEvent","useCallbackRef","useControllableState","useLayoutEffect","VisuallyHidden","PROVIDER_NAME","Collection","useCollection","createCollectionScope","createToastContext","ToastProviderProvider","useToastProviderContext","props","__scopeToast","label","duration","swipeDirection","swipeThreshold","children","viewport","setViewport","useState","toastCount","setToastCount","isFocusedToastEscapeKeyDownRef","useRef","isClosePausedRef","useCallback","prevCount","propTypes","trim","error","Error","VIEWPORT_NAME","VIEWPORT_DEFAULT_HOTKEY","VIEWPORT_PAUSE","VIEWPORT_RESUME","forwardRef","forwardedRef","hotkey","viewportProps","context","getItems","wrapperRef","headFocusProxyRef","tailFocusProxyRef","ref","composedRefs","onViewportChange","hotkeyLabel","join","replace","hasToasts","useEffect","handleKeyDown","event","isHotkeyPressed","every","key","code","current","focus","document","addEventListener","removeEventListener","wrapper","handlePause","pauseEvent","CustomEvent","dispatchEvent","handleResume","resumeEvent","window","getSortedTabbableCandidates","tabbingDirection","toastItems","tabbableCandidates","map","toastItem","toastNode","toastTabbableCandidates","getTabbableCandidates","reverse","flat","isMetaKey","altKey","ctrlKey","metaKey","isTabKey","focusedElement","activeElement","isTabbingBackwards","shiftKey","targetIsViewport","target","sortedCandidates","index","findIndex","candidate","focusFirst","slice","preventDefault","pointerEvents","undefined","FOCUS_PROXY_NAME","FocusProxy","onFocusFromOutsideViewport","proxyProps","position","prevFocusedElement","relatedTarget","isFocusFromOutsideViewport","contains","TOAST_NAME","TOAST_SWIPE_START","TOAST_SWIPE_MOVE","TOAST_SWIPE_CANCEL","TOAST_SWIPE_END","forceMount","open","openProp","defaultOpen","onOpenChange","toastProps","setOpen","prop","defaultProp","onChange","onSwipeStart","currentTarget","setAttribute","onSwipeMove","x","y","detail","delta","style","setProperty","onSwipeCancel","removeProperty","onSwipeEnd","ToastInteractiveProvider","useToastInteractiveContext","isInteractive","onClose","ToastImpl","type","durationProp","onEscapeKeyDown","pointerStartRef","swipeDeltaRef","closeTimerStartTimeRef","closeTimerRemainingTimeRef","closeTimerRef","onToastAdd","onToastRemove","handleClose","isFocusInToast","startTimer","Infinity","clearTimeout","Date","getTime","setTimeout","elapsedTime","createPortal","userSelect","touchAction","onKeyDown","nativeEvent","defaultPrevented","onPointerDown","button","clientX","clientY","onPointerMove","hasSwipeMoveStarted","Boolean","isHorizontalSwipe","includes","clamp","Math","min","max","clampedX","clampedY","moveStartBuffer","pointerType","eventDetail","originalEvent","handleAndDispatchCustomEvent","discrete","isDeltaInDirection","setPointerCapture","pointerId","abs","onPointerUp","releasePointerCapture","toast","once","ToastAnnounce","announceProps","renderAnnounceText","setRenderAnnounceText","isAnnounced","setIsAnnounced","fragment","setFragment","rootFragmentNode","setRootFragmentNode","announceTextContent","useMemo","getAnnounceTextContent","DocumentFragment","useNextFrame","timer","TITLE_NAME","titleProps","DESCRIPTION_NAME","descriptionProps","ACTION_NAME","altText","actionProps","CLOSE_NAME","closeProps","interactiveContext","onClick","name","handler","bubbles","cancelable","direction","threshold","deltaX","deltaY","isDeltaX","callback","fn","raf1","raf2","requestAnimationFrame","cancelAnimationFrame","container","textContent","childNodes","Array","from","forEach","node","nodeType","TEXT_NODE","push","isHTMLElement","isHidden","ariaHidden","hidden","display","ELEMENT_NODE","nodes","walker","createTreeWalker","NodeFilter","SHOW_ELEMENT","acceptNode","isHiddenInput","tagName","disabled","FILTER_SKIP","tabIndex","FILTER_ACCEPT","nextNode","currentNode","candidates","previouslyFocusedElement","some"],"version":3,"file":"index.js.map"}